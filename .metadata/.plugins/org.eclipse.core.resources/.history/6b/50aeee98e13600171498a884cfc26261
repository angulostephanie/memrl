package tmaze;

import java.util.Random;
import java.util.List;
import java.util.ArrayList;

public class TMazeTester {
	public int c;
	protected static int[][] tmazeMap = new int[][] {{1,0,1},{0,0,0}};
	/*
	 TMaze Domain:
	 (0,0) (0,1) (0,2)
	 (1,0) (1,1) (1,2)
	 
	 (0,0) (0,2) are "walls", or impossible locations for the agent to move.
	 
	 */
	
	public static void main(String[] args) {
		Domain tmazeGrid = new Domain(tmazeMap);
		TerminalFunction endStates = new TerminalFunction();
		RewardFunction rewards = new RewardFunction(3,2);
		Agent a = new Agent(0,1);
		State s = new State(a);
		
		rewards.setReward(1,0,10); //location coordinates and reward
		endStates.markAsTerminalPosition(1, 0); //A
		endStates.markAsTerminalPosition(1,2); // C
		tmazeGrid.setRf(rewards);
		tmazeGrid.setTf(endStates);
		
		//tmazeGrid.addActionTypes(new Action(ACTION_NORTH));
		
		// create q learning object that's linked with agent
		//run q learning agent and store results in a list
		//QLearning learning = new QLearning();
		List<Episode> episodes = new ArrayList<Episode>(1000);
		for(int i = 0; i < 10; i++) {
			System.out.println("********EPISODE #" + i + "********");
			for(int j = 0; j < 10; j++) {
				System.out.println("****STEP #" + j + "****");
				/*if(j == 0) {
					System.out.println("Action: " + ea.action(j));
					System.out.println("State: " + ea.state(j));
				} else if (j >= (ea.numTimeSteps()) ) {
					System.out.println("Action: " + ea.action(j));
					System.out.println("State: " + ea.state(j));
					System.out.println("Reward: " + ea.reward(j));
				} else {
					System.out.println("State: " + ea.state(j));
					System.out.println("Reward: " + ea.reward(j));
				}*/
			}
			//env.resetEnvironment();
		}
		//tmazeGrid.move(s, 1, 0);
		System.out.println(s.agent.getX());
		System.out.println(s.agent.getY());
		System.out.println();
		
		//tmazeGrid.move(s, 0, 1);
		System.out.println(s.agent.getX());
		System.out.println(s.agent.getY());
		
		System.out.println();
		//tmazeGrid.move(s, 0, 1);
		System.out.println(s.agent.getX());
		System.out.println(s.agent.getY());
		
	}
	
	public int toggleRewardLocation() {
		Random random = new Random();
		int a = 0;
		int b = 2;
		c = random.nextBoolean() ? a:b;
		return c;
	}
}
